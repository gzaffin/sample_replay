if(COMMAND cmake_policy)
	cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

project(sample_replay)

if(MSVC OR MINGW)
	cmake_minimum_required(VERSION 3.10)
endif()

if(UNIX OR APPLE)
	cmake_minimum_required(VERSION 3.0.2)
endif()

if(NOT TARGET emu2149) 
	add_subdirectory(modules/libkss/modules/emu2149) 
endif()

if(NOT TARGET emu2212)
	add_subdirectory(modules/libkss/modules/emu2212)
endif()

if(NOT TARGET emu2413)
	add_subdirectory(modules/libkss/modules/emu2413)
endif()

if(NOT TARGET emu8950)
	add_subdirectory(modules/libkss/modules/emu8950)
endif()

if(NOT TARGET emu76489)
	add_subdirectory(modules/libkss/modules/emu76489)
endif()

if(NOT TARGET kmz80)
	add_subdirectory(modules/libkss/modules/kmz80)
endif()

file(GLOB SOURCES modules/libkss/src/filters/*.c modules/libkss/src/kss/*.c modules/libkss/src/rconv/*.c modules/libkss/src/vm/*.c  modules/libkss/src/kssplay.c)

include_directories(modules/libkss/modules modules/libkss/src)

add_library(kss STATIC ${SOURCES})
target_link_libraries(kss emu2149 emu2212 emu2413 emu8950 emu76489 kmz80)

add_executable(kss2wav EXCLUDE_FROM_ALL modules/libkss/example/kss2wav.c)
if(NOT CMAKE_COMPILER_IS_GNUCC)
	target_link_libraries(kss2wav PRIVATE kss)
else()
	target_link_libraries(kss2wav PRIVATE kss m)
endif()

add_executable(kss2vgm EXCLUDE_FROM_ALL modules/libkss/src/kss2vgm.c)
if(NOT CMAKE_COMPILER_IS_GNUCC)
	target_link_libraries(kss2vgm PRIVATE kss)
else()
	target_link_libraries(kss2vgm PRIVATE kss m)
endif()

add_executable(sample_replay EXCLUDE_FROM_ALL src/sample_replay.c)
if (MSVC)
	find_package(SDL3 CONFIG REQUIRED)
	find_package(Iconv REQUIRED)
	add_definitions("-D USE_ICONV")
	target_link_libraries(sample_replay PRIVATE kss kernel32 SDL3::SDL3 Iconv::Iconv)
endif()
if(UNIX)
	find_package(PkgConfig REQUIRED)
	pkg_check_modules(SDL3 REQUIRED sdl3)
        add_definitions("-D USE_ICONV")
	target_link_libraries(sample_replay PRIVATE kss m ${SDL3_LIBRARIES})
	target_include_directories(sample_replay PUBLIC ${SDL3_INCLUDE_DIRS})
	target_compile_options(sample_replay PUBLIC ${SDL3_CFLAGS} ${SDL3_FLAGS_OTHER})
        target_link_options(sample_replay PUBLIC ${SDL3_LDFLAGS} ${SDL3_LDFLAGS_OTHER})
endif()
if(APPLE OR MINGW)
	find_package(PkgConfig REQUIRED)
	pkg_check_modules(SDL3 REQUIRED sdl3)
        pkg_check_modules(ICONV REQUIRED iconv)
        add_definitions("-D USE_ICONV")
	target_link_libraries(sample_replay PRIVATE kss m ${SDL3_LIBRARIES} ${ICONV_LIBRARIES})
	target_include_directories(sample_replay PUBLIC ${SDL3_INCLUDE_DIRS} ${ICONV_INCLUDE_DIRS})
	target_compile_options(sample_replay PUBLIC ${SDL3_CFLAGS} ${SDL3_FLAGS_OTHER} ${ICONV_CFLAGS} ${ICONV_FLAGS_OTHER})
        target_link_options(sample_replay PUBLIC ${SDL3_LDFLAGS} ${SDL3_LDFLAGS_OTHER} ${ICONV_LDFLAGS} ${ICONV_LDFLAGS_OTHER})
endif()
